#!/usr/bin/env python

import pickle
import numpy
import sys
import os
from scipy.sparse import csr_matrix, coo_matrix, hstack
#from svmlight_loader import load_svmlight_file
from sklearn import ensemble
from sklearn.datasets import load_svmlight_file

def resize_csr_matrix(matrix, fc):
    new_feature_count = fc

    n_objects = matrix.shape[0]
    n_features = matrix.shape[1]

    matrix = coo_matrix(matrix)
    n_items = matrix.row.shape[0]

    matrix.row.resize(n_items + n_objects)
    matrix.col.resize(n_items + n_objects)
    matrix.data.resize(n_items + n_objects)

    for i in range(n_objects):
        matrix.row.put(n_items + i, i)
        matrix.col.put(n_items + i, new_feature_count-1)
        matrix.data.put(n_items + i, 1.0)

    return csr_matrix(coo_matrix((matrix.data, (matrix.row, matrix.col)), shape=(n_objects, new_feature_count)))

X_train, y_train = load_svmlight_file(sys.argv [1])

if 'HERISVM_FC' in os.environ:
    fc=int(os.environ['HERISVM_FC'])
    X_train = resize_csr_matrix(X_train, fc)

clf = ensemble.RandomForestClassifier(n_estimators=125, max_features=None, max_depth = 18)
clf.fit(X_train, y_train)
with open(sys.argv [2], 'wb') as f:
    pickle.dump(clf, f)
